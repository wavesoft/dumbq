#!/bin/bash
#
# dumbq-cleanup - Shutdown scripts for dumbq 
#
# chkconfig: 12345 99 10
# description: Frees all dumbq resources before shutdown
# author: Ioannis Charalampidis <ioannis.charalampidis@cern.ch>, PH/SFT
#
### BEGIN INIT INFO
# Provides: dumbq-cleanup 
# Defalt-Start: 1 2 3 4 5
# Default-Stop: 0 6
# Description: Frees all dumbq resources before shutdown
### END INIT INFO

# Setup environment
source /etc/init.d/functions
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
export LANG=C

# Containers directory
CONTAINERS_DIR="/mnt/.rw/containers"

# Where CernVM fork is located
CERNVM_FORK_BIN="/usr/bin/cernvm-fork"

#
# Kill processes and cleanup dumbq-specific
#
stop_dumbq () {

    # Remove mark
    rm -f /var/lock/subsys/dumbq-cleanup

    echo "Stopping DumbQ client"

    # Stop status tty
    initctl stop dumbq-status CONSOLE=2

    # Kill all processes from CVMFS in order to avoid panics at reboot 
    PID_DUMBQ_INIT=$(ps aux | grep dumbq-agent/init.sh | grep -v grep | awk '{print $2}')
    PID_DUMBQ_CLIENT=$(ps aux | grep dumbq-client | grep -v grep | awk '{print $2}')
    PID_DUMBQ_STATUS=$(ps aux | grep dumbq-status | grep -v grep | awk '{print $2}')
    kill ${PID_DUMBQ_CLIENT} ${PID_DUMBQ_STATUS} ${PID_DUMBQ_INIT}

    # Destroy all containers
    for CONTAINER in $(lxc-ls --active); do
        ${CERNVM_FORK_BIN} ${CONTAINER} -D
    done

    # Display an OK
    echo_success
    echo ""

}

#
# Mark the script as started
#
mark_start() {
    touch /var/lock/subsys/dumbq-cleanup
    return 0
}

#
# Handle Cases
#
case "$1" in
    start)
        mark_start
        ;;
    stop)
        stop_dumbq
        ;;
    restart)
        true
        ;;
    condrestart)
        true
        ;;
    *)
        echo "Usage: $0 {start|stop}"
        ;;
esac
